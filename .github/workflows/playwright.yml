# Build and Test C# Services, Frontend, and Playwright

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      
      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Set up Docker Compose to run the services defined in service_compose.yaml
      - name: Set up Docker Compose
        uses: docker/setup-buildx-action@v2

      # Build and run the Docker containers using service_compose.yaml
      - name: Build and run services with Docker Compose
        run: |
          docker-compose -f service_compose.yaml up -d
      
      # Set up .NET SDK for C# services
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      
      # Restore dependencies for all C# projects
      - name: Restore C# dependencies
        run: dotnet restore
      
      # Build all C# projects except TestingProject
      - name: Build C# services (excluding TestingProject)
        run: |
          for project in $(find . -name '*.csproj' ! -path './TestingProject/*'); do
            dotnet build --no-restore $project
          done
      
      # Start C# services in the background (excluding TestingProject)
      - name: Start C# services in the background (excluding TestingProject)
        run: |
          for project in $(find . -name '*.csproj' ! -path './TestingProject/*'); do
            nohup dotnet run --project $project & 
          done
      
      # Set up Node.js for frontend build
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      # Install frontend dependencies
      - name: Install Frontend Dependencies
        run: npm install
        working-directory: ./front-end
      
      # Build the frontend React app
      - name: Build Frontend
        run: npm run build
        working-directory: ./front-end
      
      # Run frontend server in the background and check if it runs correctly
      - name: Start Frontend Development Server
        run: |
          npm run start &
          sleep 10
          curl -I http://localhost:3000 | grep "200 OK"
        working-directory: ./front-end
      
      # Set up Node.js and install Playwright test dependencies
      - name: Install Playwright Dependencies
        run: |
          npm install @playwright/test
        working-directory: ./PlaywrightTesting

      # Install Chromium with Playwright
      - name: Install Chromium
        run: npx playwright install chromium --with-deps
        working-directory: ./PlaywrightTesting

      # Run Playwright tests with Chromium only
      - name: Run Playwright tests with Chromium
        run: npx playwright test --project=chromium
        working-directory: ./PlaywrightTesting
      
      # Upload Playwright test results
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      # Clean up (stop and remove containers)
      - name: Clean up
        run: |
          docker-compose -f service_compose.yaml down
